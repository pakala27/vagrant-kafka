- name: broker group
  group:
    name: "{{kafkabroker.group}}"

- name: broker user
  user:
    name: "{{kafkabroker.user}}"
    comment: "Kafka User"
    system: yes
    group: "{{kafkabroker.group}}"

- name: create broker data directory
  file:
    path: "{{kafkabroker.datadir}}"
    owner: "{{kafkabroker.user}}"
    group: "{{kafkabroker.group}}"
    state: directory
    mode: 0755

- name: broker plaintext config
  template:
    src: server.properties.j2
    dest: "{{kafkabroker.config_file}}"
    mode: 0640
    owner: "{{kafkabroker.user}}"
    group: "{{kafkabroker.group}}"
  when: security_mode == "plaintext"
  notify:
    - restart kafka
    - wait for service restart

# - name: broker ssl config
#   template:
#     src: server_ssl.properties.j2
#     dest: "{{kafka.broker.config_file}}"
#     mode: 0640
#     owner: "{{kafka.broker.user}}"
#     group: "{{kafka.broker.group}}"
#   when: security_mode == "ssl"
#   notify:
#     - restart kafka
# - name: broker sasl_ssl config
#   template:
#     src: server_sasl_ssl.properties.j2
#     dest: "{{kafka.broker.config_file}}"
#     mode: 0640
#     owner: "{{kafka.broker.user}}"
#     group: "{{kafka.broker.group}}"
#   when: security_mode == "sasl_ssl"
#   notify:
#     - restart kafka

- name: broker jmx exporter config
  template:
    src: "kafka_prometheus_jmx_exporter.yml.j2"
    dest: "{{kafkabroker.jmx_exporter_config}}"
    mode: 0640
    owner: "{{kafkabroker.user}}"
    group: "{{kafkabroker.group}}"
  notify:
    - restart kafka
    - wait for service restart

- name: broker log4j properties
  template:
    src: kafka_server.log4j.properties.j2
    dest: "{{kafkabroker.log4j_properties_file}}"
    mode: 0640
    owner: "{{kafkabroker.user}}"
    group: "{{kafkabroker.group}}"
  notify:
    - restart kafka
    - wait for service restart

- name: broker environment file
  template:
    src: kafka_server.envFile.j2
    dest: "{{kafkabroker.environment_file}}"
    mode: 0640
    owner: "{{kafkabroker.user}}"
    group: "{{kafkabroker.group}}"
  notify:
    - restart kafka
    - wait for service restart

- name: broker configure service - ini file
  ini_file:
    path: "{{kafkabroker.systemd_file}}"
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    backup: yes
    no_extra_spaces: yes
  notify:
    - restart kafka
    - wait for service restart
  with_items:
    - { section: "Service", option: "EnvironmentFile", value: "{{kafkabroker.environment_file}}" }
    - { section: "Service", option: "Restart", value: "always" }
    - { section: "Service", option: "RestartSec", value: "30s" }
    - { section: "Service", option: "ExecStart", value: "/usr/bin/kafka-server-start {{kafkabroker.config_file}}" }
    - { section: "Service", option: "ExecStop", value: "/usr/bin/kafka-server-stop" }
    - { section: "Service", option: "ExecReload", value: "/usr/bin/kafka-server-stop && /usr/bin/kafka-server-start {{kafkabroker.config_file}}" }
    - { section: "Service", option: "LimitNOFILE", value: "100000" }
    - { section: "Service", option: "LimitNPROC", value: "100000" }

- name: broker configure service
  systemd:
    name: "{{kafkabroker.service_name}}"
    enabled: "{{kafkabroker.systemd.enabled}}"
    state: "{{kafkabroker.systemd.state}}"
